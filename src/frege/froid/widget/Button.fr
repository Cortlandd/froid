module froid.widget.Button where

import froid.content.Context
import froid.view.View
import froid.Types

data Button = native android.widget.Button where
    native setOnClickListener :: MutableIO Button -> MutableIO OnClickListener -> IO ()
    native setVisibility :: MutableIO Button -> Int -> IO ()
    native getText :: MutableIO Button -> IO CharSequence
    native getWidth :: MutableIO Button -> IO Int
    native getHeight :: MutableIO Button -> IO Int
    native setText :: MutableIO Button -> String -> IO ()
    native setEnabled :: MutableIO Button -> Bool -> IO ()

instance ViewSub Button where
    native fromView "(android.widget.Button)" :: MutableIO View -> IO (ClassCastException | MutableIO Button)

instance IsView Button where
    native toView "(android.view.View)" :: MutableIO Button -> IO (ClassCastException | MutableIO View)

asButton :: (Int -> IO (MutableIO View)) -> Int -> IO (MutableIO Button)
asButton find res = do
    v <- find res
    (fromView v >>= either (\cce -> error $ "Cast failed.") return) :: IO (MutableIO Button)

asView :: MutableIO Button -> IO (MutableIO View)
asView button = (toView button >>= either (\cce -> error $ "Cast failed.") return) :: IO (MutableIO View)

setButtonOnClick :: MutableIO Button -> (MutableIO View -> IO ()) -> IO ()
setButtonOnClick button handler = do
    v <- asView button
    setViewOnClick v handler
